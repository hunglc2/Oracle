1) API to create FND User
BEGIN
fnd_user_pkg.CreateUser ( x_user_name =&gt; 'Operations',
x_owner =&gt; NULL,
x_unencrypted_password =&gt;'welcome1',
x_start_date =&gt; TO_DATE('01-JAN-2000'),
x_end_date =&gt; NULL, x_last_logon_date =&gt; NULL,
x_description =&gt; 'Operations User',
x_password_date =&gt; NULL,
x_password_accesses_left =&gt; NULL,
x_employee_id =&gt; NULL,
x_email_address =&gt; NULL,
x_fax =&gt; NULL,
x_customer_id =&gt; NULL,
x_supplier_id =&gt; NULL);
COMMIT;
END;

2) API to add responsibilities to a user
BEGIN
fnd_user_pkg.addresp(username =&gt; 'ABC',
resp_app =&gt; 'SYSADMIN',
resp_key =&gt; 'SYSTEM_ADMINISTRATOR',
security_group =&gt; 'STANDARD',
description =&gt; NULL,
start_date =&gt; TO_DATE('01-JAN-2000'),
end_date =&gt; NULL );
COMMIT;
END;

3) API to remove responsibilities from a user
–This script will end date the assignment of responsibility to user
BEGIN
fnd_user_pkg.delresp(username =&gt; 'ABC',
resp_app =&gt; 'SYSADMIN',
resp_key =&gt; 'SYSTEM_ADMINISTRATOR',
security_group =&gt; 'STANDARD' );
COMMIT;
END;
4) API to change pasword

declare
v_user_name varchar2(30):=upper(‘&Enter_User_Name’);
v_new_password varchar2(30):=’&Enter_New_Password';
v_status boolean;
begin
v_status:= fnd_user_pkg.ChangePassword (
username => v_user_name,
newpassword => v_new_password
);
if v_status =true then
dbms_output.put_line (‘The password reset successfully for the User:’||v_user_name);
commit;
else
DBMS_OUTPUT.put_line (‘Unable to reset password due to’||SQLCODE||’ ‘||SUBSTR(SQLERRM, 1, 100));
rollback;
END if;
end;